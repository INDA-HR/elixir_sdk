# NOTE: This file is auto generated by OpenAPI Generator 6.3.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule inda_hr.Api.ClearCache do
  @moduledoc """
  API calls for all endpoints tagged `ClearCache`.
  """

  alias inda_hr.Connection
  import inda_hr.RequestBuilder

  @doc """
  Clear Search Results
  This method deletes the *SearchID* and the cache previously (and eventually) created by all those API calls that have a *SearchID* key in their response. They include: + [Full-Text Search on Resumes](https://api.inda.ai/hr/docs/v2/#operation/full-text_search_on_resumes__POST) + [Full-Text Search on JobAds](https://api.inda.ai/hr/docs/v2/#operation/full-text_search_on_jobads__POST) + [Search Resumes](https://api.inda.ai/hr/docs/v2/#operation/search_resumes__POST) + [Search Applicants](https://api.inda.ai/hr/docs/v2/#operation/search_applicants__POST) + [Search Applications](https://api.inda.ai/hr/docs/v2/#operation/search_applications__POST) + [Get JobAds](https://api.inda.ai/hr/docs/v2/#operation/get_jobads__GET) + [Get Applicants](https://api.inda.ai/hr/docs/v2/#operation/get_applicants__GET) + [Get Applications](https://api.inda.ai/hr/docs/v2/#operation/get_applications__GET)  When a user leaves a search page linked to INDA API, it is a good practice to delete the search cache using this method.

  ### Parameters

  - `connection` (inda_hr.Connection): Connection to server
  - `indexname` (String.t): 
  - `search_id` (String.t): 
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, inda_hr.Model.CacheDeletion.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec clear_search_results_delete(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, inda_hr.Model.CacheDeletion.t} | {:ok, inda_hr.Model.HttpValidationError.t} | {:error, Tesla.Env.t}
  def clear_search_results_delete(connection, indexname, search_id, _opts \\ []) do
    request =
      %{}
      |> method(:delete)
      |> url("/hr/v2/index/#{indexname}/resumes/search/scroll/")
      |> add_param(:query, :search_id, search_id)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %inda_hr.Model.CacheDeletion{}},
      {422, %inda_hr.Model.HttpValidationError{}}
    ])
  end
end
