# NOTE: This file is auto generated by OpenAPI Generator 6.3.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule IndaHr.Api.StartingWithIndices do
  @moduledoc """
  API calls for all endpoints tagged `StartingWithIndices`.
  """

  alias IndaHr.Connection
  import IndaHr.RequestBuilder

  @doc """
  Most Recent Resumes
   Returns the *size* documents into the index *indexname* sorted by the field *sort_by* in the order *sort_order*. In the response, *Hits* indicates the number of documents retrieved, while *Total* indicates the number of documents in the index.

  ### Parameters

  - `connection` (IndaHr.Connection): Connection to server
  - `indexname` (String.t):
  - `opts` (keyword): Optional parameters
    - `:sort_by` (String.t): The field the results will be sorted by. Available options: <code style='color: #333333; opacity: 0.9'>\"CreationDate\"</code>, <code style='color: #333333; opacity: 0.9'>\"LastModified\"</code>
    - `:sort_order` (String.t): The sort_order option can have the following values: <code style='color: #333333; opacity: 0.9'>\"asc\"</code>, <code style='color: #333333; opacity: 0.9'>\"desc\"</code>. The former will sort in ascending order, the latter in descending order.
    - `:size` (integer()): Number of resumes to be returned

  ### Returns

  - `{:ok, IndaHr.Model.MostRecentResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec most_recent_resumes_get(Tesla.Env.client, String.t, keyword()) :: {:ok, IndaHr.Model.MostRecentResponse.t} | {:ok, IndaHr.Model.ErrorModel.t} | {:ok, IndaHr.Model.HttpValidationError.t} | {:error, Tesla.Env.t}
  def most_recent_resumes_get(connection, indexname, opts \\ []) do
    optional_params = %{
      :sort_by => :query,
      :sort_order => :query,
      :size => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/hr/v2/index/#{indexname}/resumes/latest/")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %IndaHr.Model.MostRecentResponse{}},
      {400, %IndaHr.Model.ErrorModel{}},
      {404, %IndaHr.Model.ErrorModel{}},
      {503, %IndaHr.Model.ErrorModel{}},
      {422, %IndaHr.Model.HttpValidationError{}}
    ])
  end

  @doc """
  Stats Index
    This method returns the number of documents present in *indexname*,  grouped by document types. To fetch information about a specific document type, please use the *doc_type* query parameter; allowed values are: + <code style='color: #333333; opacity: 0.9'>resume</code> for [resumes](https://api.inda.ai/hr/docs/v2/#tag/Resume-Management); + <code style='color: #333333; opacity: 0.9'>job-ad</code> for [job adverts](https://api.inda.ai/hr/docs/v2/#tag/JobAd-Management); + <code style='color: #333333; opacity: 0.9'>application</code> for [applications](https://api.inda.ai/hr/docs/v2/#tag/Application-Management).

  ### Parameters

  - `connection` (IndaHr.Connection): Connection to server
  - `indexname` (String.t):
  - `opts` (keyword): Optional parameters
    - `:doc_type` (String.t):

  ### Returns

  - `{:ok, IndaHr.Model.StatsIndex.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec stats_index_get(Tesla.Env.client, String.t, keyword()) :: {:ok, IndaHr.Model.StatsIndex.t} | {:ok, IndaHr.Model.ErrorModel.t} | {:ok, IndaHr.Model.HttpValidationError.t} | {:error, Tesla.Env.t}
  def stats_index_get(connection, indexname, opts \\ []) do
    optional_params = %{
      :doc_type => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/hr/v2/index/#{indexname}/stats/")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %IndaHr.Model.StatsIndex{}},
      {404, %IndaHr.Model.ErrorModel{}},
      {503, %IndaHr.Model.ErrorModel{}},
      {422, %IndaHr.Model.HttpValidationError{}}
    ])
  end
end
