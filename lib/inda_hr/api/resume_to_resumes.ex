# NOTE: This file is auto generated by OpenAPI Generator 6.3.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule IndaHr.Api.ResumeToResumes do
  @moduledoc """
  API calls for all endpoints tagged `ResumeToResumes`.
  """

  alias IndaHr.Connection
  import IndaHr.RequestBuilder

  @doc """
  Similar Resumes
  Setting as arguments the number *size* of documents to be retrieved and the number *offset* to be skipped, this method returns similar documents to resume *resume_id* in the index *indexname*.

  ### Parameters

  - `connection` (IndaHr.Connection): Connection to server
  - `indexname` (String.t):
  - `resume_id` (String.t):
  - `similar_docs_search_query` (SimilarDocsSearchQuery):
  - `opts` (keyword): Optional parameters
    - `:size` (integer()): Number of documents to return.
    - `:offset` (integer()): Number of documents to skip.
    - `:min_score` (float()): Optional. Minimum pertinence score.
    - `:dst_lang` ([String.t]): Results languages. If left empty then the results will not be filtered by language and the they will contain multi-language results.

  ### Returns

  - `{:ok, IndaHr.Model.FoundDocsResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec similar_resumes_post(Tesla.Env.client, String.t, String.t, IndaHr.Model.SimilarDocsSearchQuery.t, keyword()) :: {:ok, IndaHr.Model.ErrorModel.t} | {:ok, IndaHr.Model.HttpValidationError.t} | {:ok, IndaHr.Model.FoundDocsResponse.t} | {:error, Tesla.Env.t}
  def similar_resumes_post(connection, indexname, resume_id, similar_docs_search_query, opts \\ []) do
    optional_params = %{
      :size => :query,
      :offset => :query,
      :min_score => :query,
      :dst_lang => :query
    }

    request =
      %{}
      |> method(:post)
      |> url("/hr/v2/index/#{indexname}/resumes/matching/resume/#{resume_id}/")
      |> add_param(:body, :body, similar_docs_search_query)
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %IndaHr.Model.FoundDocsResponse{}},
      {400, %IndaHr.Model.ErrorModel{}},
      {404, %IndaHr.Model.ErrorModel{}},
      {422, %IndaHr.Model.HttpValidationError{}}
    ])
  end
end
